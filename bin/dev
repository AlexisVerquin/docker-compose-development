#!/bin/bash

init() {

    DEV_SELF=$(basename $0);

    DEV_DIR=$(realpath $(dirname $0));
    DEV_WORKDIR=$(dirname ${DEV_DIR});
    DEV_PROJECT=$(basename ${DEV_WORKDIR});
    DEV_USERDIR=${PWD};

    DEV_COMMANDDIR=${DEV_DIR}/dev_command;

    DEV_WORKSPACE="`echo ${DEV_WORKDIR}/workspace | sed -se 's/\\//\\\\\//g'`";
    DEV_PROJECTDIR=`echo ${DEV_USERDIR} | sed -se "s/${DEV_WORKSPACE}\///"`;

    dc yml 'docker-compose.yml';
    dc mode 'run --rm';

    DEV_DOCKEROPTS='';
    DEV_COMMAND=$1;

    if [ "${DEV_PROJECTDIR=}" == "${DEV_USERDIR}" ]; then
        # Not in WORKSPACE
        DEV_PROJECTDIR='';
    fi

    # Change to command directory
    # This is so all docker-compose commands work out of the box
    cd ${DEV_COMMANDDIR};

    # Check if command exists and is executable
    DEV_EXISTS=false;
    if [ -n "${DEV_COMMAND}" ] && [ -f "${DEV_COMMAND}" ]; then
        DEV_EXISTS=true;
    fi
}

dc() {

    show() {
         echo docker-compose ${DEV_YML} ${DEV_MODE} \
            ${DEV_DOCKEROPTS} \
            ${DEV_SERVICE} \
            "${DEV_CMD}"
    }

    run() {
        cmd=`show`;
        ${cmd};
        return $?
    }

    opt() {
        DEV_DOCKEROPTS=${DEV_DOCKEROPTS}' '$*;
    }

    service() {
        DEV_SERVICE=$*;
    }

    yml_all() {
        cwd=${PWD};

        cd ${DEV_WORKDIR};
        for f in `ls docker-compose-*.yml`; do
            dc yml ${f};
        done
        cd ${cwd};
    }

    yml() {
        DEV_YML=${DEV_YML}' -f '${DEV_WORKDIR}'/'$1;
    }

    mode() {
        DEV_MODE=$*;
    }

    cmd() {
        DEV_CMD="$*";
    }

    $*;
    return $?
}

exec() {
    # Load command
    # Can exit if implemented itself
    . ./${DEV_COMMAND} $*;

    # Execute command
    dc run;
    exit $?;
}

usage() {
    echo "Usage ${DEV_SELF} ["`ls`"]";
    exit 1;
}

main() {
    init $@;
    shift;

    ${DEV_EXISTS} && exec $@ || usage;
}

main $@;
